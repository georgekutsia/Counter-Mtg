/*
  Fetches the Commander banlist from Wizards and writes it into data/commander-banlist.ts
*/

const fs = require('fs');
const path = require('path');

async function fetchCommanderBanlist() {
  const url = 'https://magic.wizards.com/en/banned-restricted-list';
  const res = await fetch(url);
  if (!res.ok) throw new Error(`HTTP ${res.status}`);
  const html = await res.text();

  // Find the Commander section and grab the first <ul> that follows
  const lower = html.toLowerCase();
  const marker = 'commander';
  const idx = lower.indexOf(marker);
  if (idx === -1) throw new Error('Commander section not found');
  const slice = html.slice(idx, idx + 30000);
  const ulMatch = slice.match(/<ul[\s\S]*?<\/ul>/i);
  if (!ulMatch) throw new Error('No <ul> found after Commander heading');
  const ulHtml = ulMatch[0];

  // Extract list items and clean tags/entities
  const items = [];
  const liRegex = /<li[^>]*>([\s\S]*?)<\/li>/gi;
  let m;
  while ((m = liRegex.exec(ulHtml))) {
    const txt = m[1]
      .replace(/<[^>]+>/g, ' ')
      .replace(/&nbsp;/g, ' ')
      .replace(/&amp;/g, '&')
      .replace(/\s+/g, ' ')
      .trim();
    if (txt) items.push(txt);
  }

  return items;
}

async function main() {
  const items = await fetchCommanderBanlist();
  const outPath = path.join(__dirname, '..', 'data', 'commander-banlist.ts');
  const header = `// Autogenerated from Wizards banlist.\n// Updated: ${new Date().toISOString()}\n\n`;
  const body = `export const BANNED_COMMANDER: string[] = ${JSON.stringify(items, null, 2)};\n\nexport default BANNED_COMMANDER;\n`;
  fs.writeFileSync(outPath, header + body, 'utf8');
  console.log(`Wrote ${items.length} items to ${outPath}`);
}

main().catch((err) => {
  console.error('Failed to update banlist:', err);
  process.exit(1);
});

